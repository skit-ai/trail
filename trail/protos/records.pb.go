// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: records.proto

package dataframes

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Turn_Type int32

const (
	Turn_UNKNOWN    Turn_Type = 0
	Turn_ACTION     Turn_Type = 1
	Turn_INPUT      Turn_Type = 2 // A human speaker provided an input.
	Turn_RESPONSE   Turn_Type = 3 // A machine generated response.
	Turn_VALIDATION Turn_Type = 4
)

// Enum value maps for Turn_Type.
var (
	Turn_Type_name = map[int32]string{
		0: "UNKNOWN",
		1: "ACTION",
		2: "INPUT",
		3: "RESPONSE",
		4: "VALIDATION",
	}
	Turn_Type_value = map[string]int32{
		"UNKNOWN":    0,
		"ACTION":     1,
		"INPUT":      2,
		"RESPONSE":   3,
		"VALIDATION": 4,
	}
)

func (x Turn_Type) Enum() *Turn_Type {
	p := new(Turn_Type)
	*p = x
	return p
}

func (x Turn_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Turn_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_records_proto_enumTypes[0].Descriptor()
}

func (Turn_Type) Type() protoreflect.EnumType {
	return &file_records_proto_enumTypes[0]
}

func (x Turn_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Turn_Type.Descriptor instead.
func (Turn_Type) EnumDescriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{1, 0}
}

// Representation of one full call
type Call struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // UUID generated during call creation in the
	// runtime system
	CreatedAt     string  `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`             // The time when the call was created
	VirtualNumber string  `protobuf:"bytes,5,opt,name=virtual_number,json=virtualNumber,proto3" json:"virtual_number,omitempty"` // Receiving phone number
	AudioUrl      string  `protobuf:"bytes,6,opt,name=audio_url,json=audioUrl,proto3" json:"audio_url,omitempty"`                // For full call audio.
	Duration      float32 `protobuf:"fixed32,8,opt,name=duration,proto3" json:"duration,omitempty"`                              // The duration of the call.
	FlowVersion   string  `protobuf:"bytes,9,opt,name=flow_version,json=flowVersion,proto3" json:"flow_version,omitempty"`       // Describes which user goal (inclusive of iterations within the goal) was being followed in the call.
	Turns         []*Turn `protobuf:"bytes,10,rep,name=turns,proto3" json:"turns,omitempty"`                                     // List of interactions between the machine and human. A single interaction is a turn.
}

func (x *Call) Reset() {
	*x = Call{}
	if protoimpl.UnsafeEnabled {
		mi := &file_records_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Call) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Call) ProtoMessage() {}

func (x *Call) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Call.ProtoReflect.Descriptor instead.
func (*Call) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{0}
}

func (x *Call) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Call) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Call) GetVirtualNumber() string {
	if x != nil {
		return x.VirtualNumber
	}
	return ""
}

func (x *Call) GetAudioUrl() string {
	if x != nil {
		return x.AudioUrl
	}
	return ""
}

func (x *Call) GetDuration() float32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Call) GetFlowVersion() string {
	if x != nil {
		return x.FlowVersion
	}
	return ""
}

func (x *Call) GetTurns() []*Turn {
	if x != nil {
		return x.Turns
	}
	return nil
}

// A turn is an interaction either from the machine or a person.
type Turn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                // UUID generated during turn creation in the runtime system.
	CreatedAt string    `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // The tiem when the turn was created.
	Type      Turn_Type `protobuf:"varint,4,opt,name=type,proto3,enum=records.Turn_Type" json:"type,omitempty"`    // Type of turn. For ML we are mostly
	// interested in `INPUT` and sub_type
	// `AUDIO`.
	SubType string `protobuf:"bytes,5,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"` // If the input was from a human speaker, then was it speech or DTMF?
	Text    string `protobuf:"bytes,6,opt,name=text,proto3" json:"text,omitempty"`                      // Top level representative text for
	// the turn from the utterances.
	Utterances []*Utterance `protobuf:"bytes,7,rep,name=utterances,proto3" json:"utterances,omitempty"`                    // List of utterances from ASR
	AudioUrl   string       `protobuf:"bytes,8,opt,name=audio_url,json=audioUrl,proto3" json:"audio_url,omitempty"`        // Path to turn audio.
	State      string       `protobuf:"bytes,10,opt,name=state,proto3" json:"state,omitempty"`                             // State of the turn in the call flow.
	AsrContext string       `protobuf:"bytes,11,opt,name=asr_context,json=asrContext,proto3" json:"asr_context,omitempty"` // Context identifiers passed to the
	// ASR.
	AsrProvider string      `protobuf:"bytes,12,opt,name=asr_provider,json=asrProvider,proto3" json:"asr_provider,omitempty"`
	Language    string      `protobuf:"bytes,13,opt,name=language,proto3" json:"language,omitempty"`     // Native language of the bot
	Prediction  *Prediction `protobuf:"bytes,14,opt,name=prediction,proto3" json:"prediction,omitempty"` // Prediction made from the system
}

func (x *Turn) Reset() {
	*x = Turn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_records_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Turn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Turn) ProtoMessage() {}

func (x *Turn) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Turn.ProtoReflect.Descriptor instead.
func (*Turn) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{1}
}

func (x *Turn) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Turn) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Turn) GetType() Turn_Type {
	if x != nil {
		return x.Type
	}
	return Turn_UNKNOWN
}

func (x *Turn) GetSubType() string {
	if x != nil {
		return x.SubType
	}
	return ""
}

func (x *Turn) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Turn) GetUtterances() []*Utterance {
	if x != nil {
		return x.Utterances
	}
	return nil
}

func (x *Turn) GetAudioUrl() string {
	if x != nil {
		return x.AudioUrl
	}
	return ""
}

func (x *Turn) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Turn) GetAsrContext() string {
	if x != nil {
		return x.AsrContext
	}
	return ""
}

func (x *Turn) GetAsrProvider() string {
	if x != nil {
		return x.AsrProvider
	}
	return ""
}

func (x *Turn) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *Turn) GetPrediction() *Prediction {
	if x != nil {
		return x.Prediction
	}
	return nil
}

type Prediction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Intents []*Intent `protobuf:"bytes,1,rep,name=intents,proto3" json:"intents,omitempty"`
}

func (x *Prediction) Reset() {
	*x = Prediction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_records_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Prediction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prediction) ProtoMessage() {}

func (x *Prediction) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prediction.ProtoReflect.Descriptor instead.
func (*Prediction) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{2}
}

func (x *Prediction) GetIntents() []*Intent {
	if x != nil {
		return x.Intents
	}
	return nil
}

type Range struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start uint32 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End   uint32 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *Range) Reset() {
	*x = Range{}
	if protoimpl.UnsafeEnabled {
		mi := &file_records_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Range) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Range) ProtoMessage() {}

func (x *Range) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Range.ProtoReflect.Descriptor instead.
func (*Range) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{3}
}

func (x *Range) GetStart() uint32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *Range) GetEnd() uint32 {
	if x != nil {
		return x.End
	}
	return 0
}

type Intent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Score float32        `protobuf:"fixed32,2,opt,name=score,proto3" json:"score,omitempty"`
	Slots []*Intent_Slot `protobuf:"bytes,3,rep,name=slots,proto3" json:"slots,omitempty"`
}

func (x *Intent) Reset() {
	*x = Intent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_records_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Intent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Intent) ProtoMessage() {}

func (x *Intent) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Intent.ProtoReflect.Descriptor instead.
func (*Intent) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{4}
}

func (x *Intent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Intent) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *Intent) GetSlots() []*Intent_Slot {
	if x != nil {
		return x.Slots
	}
	return nil
}

type Utterance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alternatives []*Utterance_Alternative `protobuf:"bytes,1,rep,name=alternatives,proto3" json:"alternatives,omitempty"`
}

func (x *Utterance) Reset() {
	*x = Utterance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_records_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Utterance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Utterance) ProtoMessage() {}

func (x *Utterance) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Utterance.ProtoReflect.Descriptor instead.
func (*Utterance) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{5}
}

func (x *Utterance) GetAlternatives() []*Utterance_Alternative {
	if x != nil {
		return x.Alternatives
	}
	return nil
}

type CallDataFrame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Calls []*Call `protobuf:"bytes,1,rep,name=calls,proto3" json:"calls,omitempty"`
}

func (x *CallDataFrame) Reset() {
	*x = CallDataFrame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_records_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallDataFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallDataFrame) ProtoMessage() {}

func (x *CallDataFrame) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallDataFrame.ProtoReflect.Descriptor instead.
func (*CallDataFrame) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{6}
}

func (x *CallDataFrame) GetCalls() []*Call {
	if x != nil {
		return x.Calls
	}
	return nil
}

type TurnDataFrame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Turns []*Turn `protobuf:"bytes,1,rep,name=turns,proto3" json:"turns,omitempty"`
}

func (x *TurnDataFrame) Reset() {
	*x = TurnDataFrame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_records_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TurnDataFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TurnDataFrame) ProtoMessage() {}

func (x *TurnDataFrame) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TurnDataFrame.ProtoReflect.Descriptor instead.
func (*TurnDataFrame) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{7}
}

func (x *TurnDataFrame) GetTurns() []*Turn {
	if x != nil {
		return x.Turns
	}
	return nil
}

type Intent_Slot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type   []string             `protobuf:"bytes,2,rep,name=type,proto3" json:"type,omitempty"`
	Values []*Intent_Slot_Value `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *Intent_Slot) Reset() {
	*x = Intent_Slot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_records_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Intent_Slot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Intent_Slot) ProtoMessage() {}

func (x *Intent_Slot) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Intent_Slot.ProtoReflect.Descriptor instead.
func (*Intent_Slot) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Intent_Slot) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Intent_Slot) GetType() []string {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Intent_Slot) GetValues() []*Intent_Slot_Value {
	if x != nil {
		return x.Values
	}
	return nil
}

type Intent_Slot_Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Body          string `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	Type          string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	AlternativeId uint32 `protobuf:"varint,3,opt,name=alternative_id,json=alternativeId,proto3" json:"alternative_id,omitempty"`
	// Types that are assignable to Value:
	//	*Intent_Slot_Value_IntValue
	//	*Intent_Slot_Value_FloatValue
	//	*Intent_Slot_Value_StringValue
	Value isIntent_Slot_Value_Value `protobuf_oneof:"value"`
	Range *Range                    `protobuf:"bytes,7,opt,name=range,proto3" json:"range,omitempty"`
}

func (x *Intent_Slot_Value) Reset() {
	*x = Intent_Slot_Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_records_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Intent_Slot_Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Intent_Slot_Value) ProtoMessage() {}

func (x *Intent_Slot_Value) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Intent_Slot_Value.ProtoReflect.Descriptor instead.
func (*Intent_Slot_Value) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{4, 0, 0}
}

func (x *Intent_Slot_Value) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Intent_Slot_Value) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Intent_Slot_Value) GetAlternativeId() uint32 {
	if x != nil {
		return x.AlternativeId
	}
	return 0
}

func (m *Intent_Slot_Value) GetValue() isIntent_Slot_Value_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *Intent_Slot_Value) GetIntValue() int64 {
	if x, ok := x.GetValue().(*Intent_Slot_Value_IntValue); ok {
		return x.IntValue
	}
	return 0
}

func (x *Intent_Slot_Value) GetFloatValue() float32 {
	if x, ok := x.GetValue().(*Intent_Slot_Value_FloatValue); ok {
		return x.FloatValue
	}
	return 0
}

func (x *Intent_Slot_Value) GetStringValue() string {
	if x, ok := x.GetValue().(*Intent_Slot_Value_StringValue); ok {
		return x.StringValue
	}
	return ""
}

func (x *Intent_Slot_Value) GetRange() *Range {
	if x != nil {
		return x.Range
	}
	return nil
}

type isIntent_Slot_Value_Value interface {
	isIntent_Slot_Value_Value()
}

type Intent_Slot_Value_IntValue struct {
	IntValue int64 `protobuf:"varint,4,opt,name=int_value,json=intValue,proto3,oneof"`
}

type Intent_Slot_Value_FloatValue struct {
	FloatValue float32 `protobuf:"fixed32,5,opt,name=float_value,json=floatValue,proto3,oneof"`
}

type Intent_Slot_Value_StringValue struct {
	StringValue string `protobuf:"bytes,6,opt,name=string_value,json=stringValue,proto3,oneof"`
}

func (*Intent_Slot_Value_IntValue) isIntent_Slot_Value_Value() {}

func (*Intent_Slot_Value_FloatValue) isIntent_Slot_Value_Value() {}

func (*Intent_Slot_Value_StringValue) isIntent_Slot_Value_Value() {}

type Utterance_Alternative struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Transcript string  `protobuf:"bytes,1,opt,name=transcript,proto3" json:"transcript,omitempty"`
	Confidence float32 `protobuf:"fixed32,2,opt,name=confidence,proto3" json:"confidence,omitempty"`
	AmScore    float32 `protobuf:"fixed32,3,opt,name=am_score,json=amScore,proto3" json:"am_score,omitempty"`
	LmScore    float32 `protobuf:"fixed32,4,opt,name=lm_score,json=lmScore,proto3" json:"lm_score,omitempty"`
}

func (x *Utterance_Alternative) Reset() {
	*x = Utterance_Alternative{}
	if protoimpl.UnsafeEnabled {
		mi := &file_records_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Utterance_Alternative) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Utterance_Alternative) ProtoMessage() {}

func (x *Utterance_Alternative) ProtoReflect() protoreflect.Message {
	mi := &file_records_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Utterance_Alternative.ProtoReflect.Descriptor instead.
func (*Utterance_Alternative) Descriptor() ([]byte, []int) {
	return file_records_proto_rawDescGZIP(), []int{5, 0}
}

func (x *Utterance_Alternative) GetTranscript() string {
	if x != nil {
		return x.Transcript
	}
	return ""
}

func (x *Utterance_Alternative) GetConfidence() float32 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

func (x *Utterance_Alternative) GetAmScore() float32 {
	if x != nil {
		return x.AmScore
	}
	return 0
}

func (x *Utterance_Alternative) GetLmScore() float32 {
	if x != nil {
		return x.LmScore
	}
	return 0
}

var File_records_proto protoreflect.FileDescriptor

var file_records_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x22, 0xdd, 0x01, 0x0a, 0x04, 0x43, 0x61, 0x6c,
	0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x25, 0x0a, 0x0e, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x64, 0x69, 0x6f,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x64, 0x69,
	0x6f, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x21, 0x0a, 0x0c, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x6c, 0x6f, 0x77, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x05, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x2e, 0x54, 0x75, 0x72,
	0x6e, 0x52, 0x05, 0x74, 0x75, 0x72, 0x6e, 0x73, 0x22, 0xd2, 0x03, 0x0a, 0x04, 0x54, 0x75, 0x72,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x26, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12,
	0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x2e, 0x54, 0x75, 0x72, 0x6e, 0x2e, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x32, 0x0a, 0x0a, 0x75, 0x74, 0x74, 0x65, 0x72,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x2e, 0x55, 0x74, 0x74, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52,
	0x0a, 0x75, 0x74, 0x74, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x61,
	0x75, 0x64, 0x69, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x61, 0x75, 0x64, 0x69, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x61, 0x73, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x73, 0x72, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x73, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x73, 0x72, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x33,
	0x0a, 0x0a, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x2e, 0x50, 0x72, 0x65,
	0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x48, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4e, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12,
	0x0c, 0x0a, 0x08, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x03, 0x12, 0x0e, 0x0a,
	0x0a, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x04, 0x22, 0x37, 0x0a,
	0x0a, 0x50, 0x72, 0x65, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x07, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x69,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x22, 0x2f, 0x0a, 0x05, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0xb2, 0x03, 0x0a, 0x06, 0x49, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x2a, 0x0a, 0x05,
	0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x6c, 0x6f,
	0x74, 0x52, 0x05, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x1a, 0xd1, 0x02, 0x0a, 0x04, 0x53, 0x6c, 0x6f,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x2e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0xec, 0x01,
	0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x74, 0x69, 0x76, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x08, 0x69, 0x6e, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0b, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x6c,
	0x6f, 0x61, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x23, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x0b, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x24, 0x0a,
	0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x05, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xd5, 0x01, 0x0a,
	0x09, 0x55, 0x74, 0x74, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x0c, 0x61, 0x6c,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x2e, 0x55, 0x74, 0x74, 0x65, 0x72,
	0x61, 0x6e, 0x63, 0x65, 0x2e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x52, 0x0c, 0x61, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x73, 0x1a, 0x83,
	0x01, 0x0a, 0x0b, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x6d, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x07, 0x61, 0x6d, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6d, 0x5f,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x6c, 0x6d, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x22, 0x34, 0x0a, 0x0d, 0x43, 0x61, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x2e, 0x43,
	0x61, 0x6c, 0x6c, 0x52, 0x05, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x22, 0x34, 0x0a, 0x0d, 0x54, 0x75,
	0x72, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x74,
	0x75, 0x72, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0x2e, 0x54, 0x75, 0x72, 0x6e, 0x52, 0x05, 0x74, 0x75, 0x72, 0x6e, 0x73,
	0x42, 0x0e, 0x5a, 0x0c, 0x2f, 0x3b, 0x64, 0x61, 0x74, 0x61, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_records_proto_rawDescOnce sync.Once
	file_records_proto_rawDescData = file_records_proto_rawDesc
)

func file_records_proto_rawDescGZIP() []byte {
	file_records_proto_rawDescOnce.Do(func() {
		file_records_proto_rawDescData = protoimpl.X.CompressGZIP(file_records_proto_rawDescData)
	})
	return file_records_proto_rawDescData
}

var file_records_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_records_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_records_proto_goTypes = []interface{}{
	(Turn_Type)(0),                // 0: records.Turn.Type
	(*Call)(nil),                  // 1: records.Call
	(*Turn)(nil),                  // 2: records.Turn
	(*Prediction)(nil),            // 3: records.Prediction
	(*Range)(nil),                 // 4: records.Range
	(*Intent)(nil),                // 5: records.Intent
	(*Utterance)(nil),             // 6: records.Utterance
	(*CallDataFrame)(nil),         // 7: records.CallDataFrame
	(*TurnDataFrame)(nil),         // 8: records.TurnDataFrame
	(*Intent_Slot)(nil),           // 9: records.Intent.Slot
	(*Intent_Slot_Value)(nil),     // 10: records.Intent.Slot.Value
	(*Utterance_Alternative)(nil), // 11: records.Utterance.Alternative
}
var file_records_proto_depIdxs = []int32{
	2,  // 0: records.Call.turns:type_name -> records.Turn
	0,  // 1: records.Turn.type:type_name -> records.Turn.Type
	6,  // 2: records.Turn.utterances:type_name -> records.Utterance
	3,  // 3: records.Turn.prediction:type_name -> records.Prediction
	5,  // 4: records.Prediction.intents:type_name -> records.Intent
	9,  // 5: records.Intent.slots:type_name -> records.Intent.Slot
	11, // 6: records.Utterance.alternatives:type_name -> records.Utterance.Alternative
	1,  // 7: records.CallDataFrame.calls:type_name -> records.Call
	2,  // 8: records.TurnDataFrame.turns:type_name -> records.Turn
	10, // 9: records.Intent.Slot.values:type_name -> records.Intent.Slot.Value
	4,  // 10: records.Intent.Slot.Value.range:type_name -> records.Range
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_records_proto_init() }
func file_records_proto_init() {
	if File_records_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_records_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Call); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_records_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Turn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_records_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Prediction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_records_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Range); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_records_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Intent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_records_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Utterance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_records_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CallDataFrame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_records_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TurnDataFrame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_records_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Intent_Slot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_records_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Intent_Slot_Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_records_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Utterance_Alternative); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_records_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*Intent_Slot_Value_IntValue)(nil),
		(*Intent_Slot_Value_FloatValue)(nil),
		(*Intent_Slot_Value_StringValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_records_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_records_proto_goTypes,
		DependencyIndexes: file_records_proto_depIdxs,
		EnumInfos:         file_records_proto_enumTypes,
		MessageInfos:      file_records_proto_msgTypes,
	}.Build()
	File_records_proto = out.File
	file_records_proto_rawDesc = nil
	file_records_proto_goTypes = nil
	file_records_proto_depIdxs = nil
}
